/* eslint-disable react/no-unescaped-entities */
import { Stack, Typography, List, ListItem, ListItemButton, ListItemIcon, ListItemText} from '@mui/material'
import { Container } from '@mui/system'
import { MainLayout } from 'components/layouts'
import { useSort } from 'context/sortMethods'
import { red, deepPurple, green, blue, deepOrange} from '@mui/material/colors';
import LaptopWindowsIcon from '@mui/icons-material/LaptopWindows';
import FingerprintRoundedIcon from '@mui/icons-material/FingerprintRounded';
import MessageIcon from '@mui/icons-material/Message';
import CardGiftcardIcon from '@mui/icons-material/CardGiftcard';
import NextWeekIcon from '@mui/icons-material/NextWeek';
import React from 'react'
import { NextPageWithLayout } from './_app'
import Head from 'next/head'

const HomePage: NextPageWithLayout = () => {
  const {
    state: { title, description },
    dispatch
  } = useSort()

  return (
    <>
      <Head>
        <title>Shellsort</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;500;700&display=swap" rel="stylesheet" />
      </Head>
      <Container sx={{ mb: 10, display: "flex", flexDirection: "column", justifyContent: "center", alignItems: "center" }}>
       {title === "Shellsort" ? 
       (<><Typography variant='h1' sx={{ color: "#0D0A0B", fontWeight: "700", fontFamily: "Roboto Mono", letterSpacing: "8px", fontSize: { xs: "70px", md: "90px", lg: "140px" }, marginBottom: { xs: "30px", md: "20px", lg: "50px" } }}>Shellsort</Typography><Typography sx={{ width: { xs: "400px", md: "600px", lg: "1300px" }, textAlign: "center", fontSize: { xs: "15px", md: "23px", lg: "28px" }, fontFamily: "Roboto Mono", letterSpacing: "4px", marginBottom: { xs: "30px", md: "20px", lg: "30px" } }}>El método se denomina Shell en honor de su inventor Donald Shell. El método ShellSort es una generalización del ordenamiento por inserción, teniendo en cuenta las generalidades:</Typography><List sx={{ width: '1400px', bgcolor: 'white' }} aria-label="contacts">
            <ListItem disablePadding>
              <ListItemButton>
                <ListItemIcon>
                  <LaptopWindowsIcon sx={{ color: green[700] }} classes />
                </ListItemIcon>
                <ListItemText><Typography sx={{ fontFamily: "Roboto Mono", fontWeight: "700", fontSize: { xs: "", md: "18px", lg: "23px" }, letterSpacing: "4px" }}>El ordenamiento por inserción es eficiente si la entrada está “casi ordenada”.</Typography></ListItemText>
              </ListItemButton>
            </ListItem>
            <ListItem disablePadding>
              <ListItemButton>
                <ListItemIcon>
                  <FingerprintRoundedIcon sx={{ color: red[600] }} />
                </ListItemIcon>
                <ListItemText><Typography sx={{ fontFamily: "Roboto Mono", fontWeight: "700", fontSize: { xs: "", md: "18px", lg: "23px" }, letterSpacing: "4px" }}>El ordenamiento por inserción es ineficiente, en general, porque mueve los valores sólo una posición cada vez.</Typography></ListItemText>
              </ListItemButton>
            </ListItem>
            <ListItem disablePadding>
              <ListItemButton>
                <ListItemIcon>
                  <MessageIcon sx={{ color: deepPurple[500] }} />
                </ListItemIcon>
                <ListItemText><Typography sx={{ fontFamily: "Roboto Mono", fontWeight: "700", fontSize: { xs: "", md: "18px", lg: "23px" }, letterSpacing: "4px" }}>Usando los incrementos de Shell que comienzan con 1/2 del tamaño del vector y se dividen por 2 cada vez.</Typography></ListItemText>
              </ListItemButton>
            </ListItem>
            <ListItem disablePadding>
              <ListItemButton>
                <ListItemIcon>
                  <CardGiftcardIcon sx={{ color: blue[600] }} />
                </ListItemIcon>
                <ListItemText><Typography sx={{ fontFamily: "Roboto Mono", fontWeight: "700", fontSize: { xs: "", md: "18px", lg: "23px" }, letterSpacing: "4px" }}>Debe su nombre al ingeniero y matemático estadounidense Donald Shell que lo publicó en la revista Communications Of the ACM en 1959.</Typography></ListItemText>
              </ListItemButton>
            </ListItem>
            <ListItem disablePadding>
              <ListItemButton>
                <ListItemIcon>
                  <NextWeekIcon sx={{ color: deepOrange[500] }} />
                </ListItemIcon>
                <ListItemText><Typography sx={{ fontFamily: "Roboto Mono", fontWeight: "700", fontSize: { xs: "", md: "18px", lg: "23px" }, letterSpacing: "4px" }}>Coste computacional: promedio O(n<sup>3/2</sup>) - Mejor caso O(<i>n</i> log <i>n</i>)   <br /> - Peor caso O(n<sup>2</sup>)</Typography></ListItemText>
              </ListItemButton>
            </ListItem>
          </List></>) : title === "Bubblesort" ? 
          (<><Typography variant='h1' sx={{ color: "#0D0A0B", fontWeight: "700", fontFamily: "Roboto Mono", letterSpacing: "8px", fontSize: { xs: "70px", md: "90px", lg: "140px" }, marginBottom: { xs: "30px", md: "20px", lg: "50px" } }}>BubbleSort</Typography>
          <Typography sx={{ width: { xs: "400px", md: "600px", lg: "1300px" }, textAlign: "center", fontSize: { xs: "15px", md: "23px", lg: "28px" }, fontFamily: "Roboto Mono", letterSpacing: "4px", marginBottom: { xs: "30px", md: "20px", lg: "30px" } }}>Es un sencillo algoritmo de ordenamiento, funciona revisando cada elemento de la lista que va a ser ordenada con el siguiente, intercambiándolos de posición si están en el orden equivocado. Es necesario revisar varias veces toda la lista hasta que no se necesiten más intercambios, lo cual significa que la lista está ordenada.</Typography><List sx={{ width: '1400px', bgcolor: 'white' }} aria-label="contacts">
          <ListItem disablePadding>
            <ListItemButton>
              <ListItemIcon>
                <LaptopWindowsIcon sx={{ color: green[700] }} classes />
              </ListItemIcon>
              <ListItemText><Typography sx={{ fontFamily: "Roboto Mono", fontWeight: "700", fontSize: { xs: "", md: "18px", lg: "23px" }, letterSpacing: "4px" }}>Este algoritmo obtiene su nombre de la forma con la que suben por la lista los elementos durante los intercambios</Typography></ListItemText>
            </ListItemButton>
          </ListItem>
          <ListItem disablePadding>
            <ListItemButton>
              <ListItemIcon>
                <FingerprintRoundedIcon sx={{ color: red[600] }} />
              </ListItemIcon>
              <ListItemText><Typography sx={{ fontFamily: "Roboto Mono", fontWeight: "700", fontSize: { xs: "", md: "18px", lg: "23px" }, letterSpacing: "4px" }}>También es conocido como el método del intercambio directo.</Typography></ListItemText>
            </ListItemButton>
          </ListItem>
          <ListItem disablePadding>
            <ListItemButton>
              <ListItemIcon>
                <MessageIcon sx={{ color: deepPurple[500] }} />
              </ListItemIcon>
              <ListItemText><Typography sx={{ fontFamily: "Roboto Mono", fontWeight: "700", fontSize: { xs: "", md: "18px", lg: "23px" }, letterSpacing: "4px" }}>Dado que solo usa comparaciones para operar elementos, se lo considera un algoritmo de comparación, siendo uno de los más sencillos de implementar.</Typography></ListItemText>
            </ListItemButton>
          </ListItem>
          <ListItem disablePadding>
            <ListItemButton>
              <ListItemIcon>
                <CardGiftcardIcon sx={{ color: blue[600] }} />
              </ListItemIcon>
              <ListItemText><Typography sx={{ fontFamily: "Roboto Mono", fontWeight: "700", fontSize: { xs: "", md: "18px", lg: "23px" }, letterSpacing: "4px" }}>Eficaz, sencillo, código reducido para realiza el ordenamiento
</Typography></ListItemText>
            </ListItemButton>
          </ListItem>
          <ListItem disablePadding>
            <ListItemButton>
              <ListItemIcon>
                <NextWeekIcon sx={{ color: deepOrange[500] }} />
              </ListItemIcon>
              <ListItemText><Typography sx={{ fontFamily: "Roboto Mono", fontWeight: "700", fontSize: { xs: "", md: "18px", lg: "23px" }, letterSpacing: "4px" }}>Coste computacional: promedio O(n<sup>2</sup>) - Mejor caso O(<i>n</i> log <i>n</i>)   <br /> - Peor caso O(n<sup>2</sup>)</Typography></ListItemText>
            </ListItemButton>
          </ListItem>
        </List></>) : (<><Typography variant='h1' sx={{ color: "#0D0A0B", fontWeight: "700", fontFamily: "Roboto Mono", letterSpacing: "8px", fontSize: { xs: "70px", md: "90px", lg: "140px" }, marginBottom: { xs: "30px", md: "20px", lg: "50px" } }}>Quicksort</Typography>
        <Typography sx={{ width: { xs: "400px", md: "600px", lg: "1300px" }, textAlign: "center", fontSize: { xs: "15px", md: "23px", lg: "28px" }, fontFamily: "Roboto Mono", letterSpacing: "4px", marginBottom: { xs: "30px", md: "20px", lg: "30px" } }}>Quicksort es un algoritmo de ordenamiento que utiliza recursividad para ordenar una lista de “n” cantidad de objetos, variables o datos. Este algoritmo toma un pivote, que separa la lista desordenada en dos, y va realizando este mismo proceso con las sublistas que se generan con el mismo proceso; esto se repite, hasta que queda todo ordenado.</Typography><List sx={{ width: '1400px', bgcolor: 'white' }} aria-label="contacts">
            <ListItem disablePadding>
              <ListItemButton>
                <ListItemIcon>
                  <LaptopWindowsIcon sx={{ color: green[700] }} classes />
                </ListItemIcon>
                <ListItemText><Typography sx={{ fontFamily: "Roboto Mono", fontWeight: "700", fontSize: { xs: "", md: "18px", lg: "23px" }, letterSpacing: "4px" }}>Esta basado en el enfoque de “Divide y Vencerás”.</Typography></ListItemText>
              </ListItemButton>
            </ListItem>
            <ListItem disablePadding>
              <ListItemButton>
                <ListItemIcon>
                  <FingerprintRoundedIcon sx={{ color: red[600] }} />
                </ListItemIcon>
                <ListItemText><Typography sx={{ fontFamily: "Roboto Mono", fontWeight: "700", fontSize: { xs: "", md: "18px", lg: "23px" }, letterSpacing: "4px" }}>Cuando fue creado, se logró una demostración matemática que prueba que este sistema es en realidad el más rápido posible</Typography></ListItemText>
              </ListItemButton>
            </ListItem>
            <ListItem disablePadding>
              <ListItemButton>
                <ListItemIcon>
                  <MessageIcon sx={{ color: deepPurple[500] }} />
                </ListItemIcon>
                <ListItemText><Typography sx={{ fontFamily: "Roboto Mono", fontWeight: "700", fontSize: { xs: "", md: "18px", lg: "23px" }, letterSpacing: "4px" }}>Utiliza la recursividad como su principal recurso.</Typography></ListItemText>
              </ListItemButton>
            </ListItem>
            <ListItem disablePadding>
              <ListItemButton>
                <ListItemIcon>
                  <CardGiftcardIcon sx={{ color: blue[600] }} />
                </ListItemIcon>
                <ListItemText><Typography sx={{ fontFamily: "Roboto Mono", fontWeight: "700", fontSize: { xs: "", md: "18px", lg: "23px" }, letterSpacing: "4px" }}>Es un algoritmo de ordenamiento rápido (Quicksort) creado por un científico de origen británico llamado Charles A. Richard H.</Typography></ListItemText>
              </ListItemButton>
            </ListItem>
            <ListItem disablePadding>
              <ListItemButton>
                <ListItemIcon>
                  <NextWeekIcon sx={{ color: deepOrange[500] }} />
                </ListItemIcon>
                <ListItemText><Typography sx={{ fontFamily: "Roboto Mono", fontWeight: "700", fontSize: { xs: "", md: "18px", lg: "23px" }, letterSpacing: "4px" }}>Coste computacional: promedio O(<i>n</i> log <i>n</i>) - Mejor caso O(<i>n</i> log <i>n</i>)   <br /> - Peor caso O(n<sup>2</sup>)</Typography></ListItemText>
              </ListItemButton>
            </ListItem>
          </List></>)
        } 
      </Container>
    </>
  )
}

HomePage.getLayout = (page: any) => {
  return (
    <MainLayout title="inicio" description="Analisis computacional con react">
      {page}
    </MainLayout>
  )
}

export default HomePage
